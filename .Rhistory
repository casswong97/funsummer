docapt <- read.csv("KaggleV2-May-2016.csv")
docapt <- read.csv("KaggleV2-May-2016.csv")
docapt <- read.csv("KaggleV2-May-2016.csv")
docapt <- read.csv("KaggleV2-May-2016.csv")
docapt <- read.csv("KaggleV2-May-2016.csv")
setwd("~/Documents/TO 414 working directory/funsummer")
docapt <- read.csv("KaggleV2-May-2016.csv")
library(chron)
library(lubridate)
library(ggplot2)
docapt$PatientId <- NULL
docapt$AppointmentID <- NULL
docapt$fullScheduledDate <- as.POSIXct(substr(docapt$ScheduledDay, 1, 10))
docapt$fullScheduledTime <- as.POSIXct(substr(docapt$ScheduledDay, 12, 19), format = "%H:%M:%OS")
docapt$AppointmentDay <- as.POSIXct(substr(docapt$AppointmentDay, 1, 10))
docapt$ScheduledDay <- NULL
docapt$hourOfSchedule <- hour(docapt$fullScheduledTime) #helps with time of day
docapt$hourOfSchedule <- ifelse((minute(docapt$fullScheduledTime) >= 16 & minute(docapt$fullScheduledTime) <= 30), docapt$hourOfSchedule+0.25, docapt$hourOfSchedule)
docapt$hourOfSchedule <- ifelse((minute(docapt$fullScheduledTime) >= 31 & minute(docapt$fullScheduledTime) <= 45), docapt$hourOfSchedule+0.5, docapt$hourOfSchedule)
docapt$hourOfSchedule <- ifelse((minute(docapt$fullScheduledTime) >= 46 & minute(docapt$fullScheduledTime) <= 60), docapt$hourOfSchedule+0.75, docapt$hourOfSchedule)
patientHours <- seq(from = 0, to = 23.75, by = 0.25)
numPatientHoursAt <- numeric(length(patientHours))
for(i in 1:length(patientHours)) {
numPatientHoursAt[i] = length(which(docapt$hourOfSchedule == patientHours[i]))
}
patientHours$numHours <- as.data.frame(patientHours)
numPatientHoursAt <- as.data.frame(numPatientHoursAt)
docapt1 <- cbind(patientHours, numPatientHoursAt)
#this plot shows how many patients are scheduling appointments per each 15 minute interval in the day
scheduledTimePlot <- ggplot(data = docapt1, aes(x=patientHours, y=numPatientHoursAt)) + geom_line() + geom_smooth()
scheduledTimePlot
docapt$weekday <- weekdays(as.Date(docapt$fullScheduledDate))
docapt$month <- format(docapt$fullScheduledDate,"%m")
docapt$month <- as.numeric(as.character(docapt$month))
docapt$weekday <- ordered(docapt$weekday, levels = c("Sunday","Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
barplot(table(docapt$weekday), ylab = "Number of Scheduled Appointments", xlab ="Day", main="Number of Patients Scheduling Appointments per Day of Week", col = docapt$weekday)
barplot(table(docapt$month), ylab = "Number of Scheduled Appointments", xlab ="Day", main="Number of Patients Scheduling Appointments per Month", col = docapt$month)
docapt$appointmentMonth <- format(docapt$AppointmentDay,"%m")
docapt$appointmentMonth <- as.numeric(as.character(docapt$appointmentMonth), na.rm=TRUE)
barplot(table(docapt$appointmentMonth), ylab = "Number of Scheduled Appointments", xlab ="Month", main="Number of Patients Scheduled Appointments per Month", col = docapt$appointmentMonth)
docapt$waitingTime <- docapt$AppointmentDay - docapt$fullScheduledDate
#gets the number of days instead of seconds
docapt$waitingTime <- (docapt$waitingTime / 86400)
ggplot(data = docapt, y = docapt$waitingTime, jitter = True)
docapt$No.show <- ifelse(docapt$No.show == "No", 1, 0)
#1 = showed up, 0 = no show
plot1 <- ggplot() + geom_jitter(aes(y = docapt$waitingTime, x = docapt$No.show), data = docapt, stat="identity")
plot1
proportionNoShows = length(which(docapt$No.show == 0)) / (length(which(docapt$No.show == 1)) + length(which(docapt$No.show == 0)))
cat("The number of docapt showing up to the appointment is", length(which(docapt$No.show == 1)), "and the number of docapt not showing up to the appointment is", length(which(docapt$No.show == 0)), ". The proportion of people not showing up is", proportionNoShows, ".")
#next steps:
#1. make a thing where it shows how many no shows there were per month (make a line chart like above)
#2. make a bar chart where it shows how many no shows there were each month (clustered column with shows), do some proportions
#lm, glm, probit
counts3= table(docapt$weekday, docapt$No.show)
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"), legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People", col= rainbow(8), ylim=c(0, 20000))
counts3= table(docapt$weekday, docapt$No.show)
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("No Show", "Show"), legend = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"), xlab = "Number of Appointments", ylab= "Number of People", col= rainbow(8), ylim=c(0, 20000))
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("No Show", "Show"), legend = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"), xlab = "Number of Appointments", ylab= "Number of People", col= rainbow(8), ylim=c(0, 20000))
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("No Show", "Show"), legend = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"), xlab = "Number of Appointments", ylab= "Number of People", col= rainbow(8), ylim=c(0, 20000))
counts3= table(docapt$weekday, docapt$No.show)
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("No Show", "Show"), legend = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"), xlab = "Number of Appointments", ylab= "Number of People", col= rainbow(8), ylim=c(0, 20000))
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("No Show", "Show"), legend = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"), xlab = "Number of Appointments", ylab= "Number of People", col= rainbow(8), ylim=c(0, 20000))
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("No Show", "Show"), legend = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"), xlab = "Number of Appointments", ylab= "Number of People", col= rainbow(8))
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("No Show", "Show"), legend = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"), xlab = "Number of Appointments", ylab= "Number of People", col= rainbow(8))
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("Show", "No Show"), legend = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"), xlab = "Number of Appointments", ylab= "Number of People", col= rainbow(8))
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("Show", "No Show"), legend = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"), xlab = "Number of Appointments", ylab= "Number of People", col= rainbow(8))
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("No Show", "Show"), legend = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"), xlab = "Number of Appointments", ylab= "Number of People", col= rainbow(8))
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("No Show", "Show"), legend = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"), xlab = "Number of Appointments", ylab= "Number of People", col= rainbow(5))
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("No Show", "Show"), legend = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), xlab = "Number of Appointments", ylab= "Number of People", col= rainbow(5))
counts3= table(docapt$No.show, docapt$weekday)
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("No Show", "Show"), legend = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), xlab = "Number of Appointments", ylab= "Number of People", col= rainbow(5))
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People", col= rainbow(5))
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"), legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People", col= rainbow(5))
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"), legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"), legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"), legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People", col = "blue")
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"), legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People", col = "blue", "red")
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"), legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People", col = doctapt$No.show)
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"), legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People", col = docapt$No.show)
barplot(counts3, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"), legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
counts= table(docapt$No.show, docapt$weekday)
barplot(counts, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"), legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
ounts2= table(docapt$No.show, docapt$month)
barplot(counts2, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("January", "February", "March", "April", "May", "June", "November", "December"), legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
counts2= table(docapt$No.show, docapt$month)
barplot(counts2, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("January", "February", "March", "April", "May", "June", "November", "December"), legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "N
barplot(counts2, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("January", "February", "March", "April", "May", "June", "November", "December"), legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
barplot(counts2, main="Appointment Data by Month", beside=TRUE, legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
counts2= table(docapt$No.show, docapt$month)
counts2= table(docapt$No.show, docapt$month)
barplot(counts2, main="Appointment Data by Month", beside=TRUE, legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
View(docapt)
counts3= table(docapt$No.show, month(docapt$appointmentMonth)
barplot(counts3, main="Scheduled Appointment Data by Month", beside=TRUE, legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
counts3= table(docapt$No.show, month(docapt$appointmentMonth)
barplot(counts3, main="Scheduled Appointment Data by Month", beside=TRUE, legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
counts3= table(docapt$No.show, month(docapt$appointmentMonth)
)
counts3= table(docapt$No.show, month(docapt$appointmentMonth))
barplot(counts3, main="Scheduled Appointment Data by Month", beside=TRUE, legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
?and
proportionNoShows = length(which(docapt$No.show == 0 && docapt$weekday == Monday)) / (length(which(docapt$No.show == 1 && docapt$weekday == Monday)) + length(which(docapt$No.show == 0 && docapt$weekday == Monday)))
proportionNoShows = length(which(docapt$No.show == 0 && docapt$weekday == "Monday")) / (length(which(docapt$No.show == 1 && docapt$weekday == "Monday")) + length(which(docapt$No.show == 0 && docapt$weekday == "Monday")))
proportionNoShows
proportionNoShows = length(which(docapt$No.show == 0 && docapt$weekday == "Monday"))
proportionNoShows = length(which(docapt$No.show == 0)) / (length(which(docapt$No.show == 1)) + length(which(docapt$No.show == 0)))
cat("The number of docapt showing up to the appointment is", length(which(docapt$No.show == 1)), "and the number of docapt not showing up to the appointment is", length(which(docapt$No.show == 0)), ". The proportion of people not showing up is", proportionNoShows, ".")
proportionNoShows <- length(which(docapt$weekday == "Monday" & docapt$No.show == 1))
proportionNoShows <- length(which(docapt$weekday == "Monday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Monday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Monday" & docapt$No.show == 1)))
monProp <- length(which(docapt$weekday == "Monday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Monday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Monday" & docapt$No.show == 1)))
tuesProp <- length(which(docapt$weekday == "Tuesday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Tuesday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Tuesday" & docapt$No.show == 1)))
wedProp <- length(which(docapt$weekday == "Wednesday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Wednesday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Wednesday" & docapt$No.show == 1)))
thursProp <- length(which(docapt$weekday == "Thursday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Thursday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Thursday" & docapt$No.show == 1)))
friProp <- length(which(docapt$weekday == "Friday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Friday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Friday" & docapt$No.show == 1)))
cat("The proportion of no shows per each day of the week are as follows. Monday:", monProp, ". Tuesday:", tuesProp, ". Wednesday:", wedProp, ". Thursday:", thursProp, ". Friday:", friProp, ". As we can see, the proportion of no shows were the highest on Fridays.")
rm(monProp, tuesProp, wedProp, thursProp, friProp)
janProp <- length(which(docapt$month == 1 & docapt$No.show == 0)) / (length(which(docapt$month == 1 & docapt$No.show == 0)) + length(which(docapt$month == 1 & docapt$No.show == 1)))
barplot(counts2, main="Appointment Data by Month", beside=TRUE, legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
janProp <- length(which(docapt$month == 1 & docapt$No.show == 0)) / (length(which(docapt$month == 1 & docapt$No.show == 0)) + length(which(docapt$month == 1 & docapt$No.show == 1)))
febProp <- length(which(docapt$month == 2 & docapt$No.show == 0)) / (length(which(docapt$month == 2 & docapt$No.show == 0)) + length(which(docapt$month == 2 & docapt$No.show == 1)))
marProp <- length(which(docapt$month == 3 & docapt$No.show == 0)) / (length(which(docapt$month == 3 & docapt$No.show == 0)) + length(which(docapt$month == 3 & docapt$No.show == 1)))
aprProp <- length(which(docapt$month == 4 & docapt$No.show == 0)) / (length(which(docapt$month == 4 & docapt$No.show == 0)) + length(which(docapt$month == 4 & docapt$No.show == 1)))
mayProp <- length(which(docapt$month == 5 & docapt$No.show == 0)) / (length(which(docapt$month == 5 & docapt$No.show == 0)) + length(which(docapt$month == 5 & docapt$No.show == 1)))
juneProp <- length(which(docapt$month == 6 & docapt$No.show == 0)) / (length(which(docapt$month == 6 & docapt$No.show == 0)) + length(which(docapt$month == 6 & docapt$No.show == 1)))
novProp <- length(which(docapt$month == 11 & docapt$No.show == 0)) / (length(which(docapt$month == 11 & docapt$No.show == 0)) + length(which(docapt$month == 11 & docapt$No.show == 1)))
decProp <- length(which(docapt$month == 12 & docapt$No.show == 0)
cat("The proportion of no shows per each month of scheduling are as follows. January:", janProp, ". February:", febProp, ". March:", marProp, ". April:", aprProp, ". May:", mayProp, ". June:", juneProp, ". November:", novProp, ". December:", decProp, ". As we can see, the proportion of no shows were the highest on Fridays.")
decProp <- length(which(docapt$month == 12 & docapt$No.show == 0)) / (length(which(docapt$month == 12 & docapt$No.show == 0)) + length(which(docapt$month == 12 & docapt$No.show == 1)))
cat("The proportion of no shows per each month of scheduling are as follows. January:", janProp, ". February:", febProp, ". March:", marProp, ". April:", aprProp, ". May:", mayProp, ". June:", juneProp, ". November:", novProp, ". December:", decProp, ". As we can see, the proportion of no shows were the highest on Fridays.")
cat("The proportion of no shows per each month of scheduling are as follows. January:", janProp, ". February:", febProp, ". March:", marProp, ". April:", aprProp, ". May:", mayProp, ". June:", juneProp, ". November:", novProp, ". December:", decProp, ". As we can see, the proportion of no shows were the highest when the appointment were scheduled in March. However, we believe that this may be because the dataset does not show us many appointments made during most months available, so this potentially may be skewed, and would thus not be the best indicator of whether a patient would be a no-show appointment or not.")
rm(janProp, febProp, aprProp, mayProp, juneProp, novProp, decProp)
plot1 <- ggplot() + geom_jitter(aes(y = docapt$waitingTime, x = docapt$No.show), data = docapt, stat="identity")
plot1
prop50 <- length(which(docapt$No.show == 0 & docapt$waitingTime >= 0 & docapt$waitingTime < 50)) / (length(which(docapt$No.show == 1 & docapt$waitingTime >= 0 & docapt$waitingTime < 50)) + length(which(docapt$No.show == 0 & docapt$waitingTime >= 0 & docapt$waitingTime < 50)))
prop100 <- length(which(docapt$No.show == 0 & docapt$waitingTime >= 50 & docapt$waitingTime < 100)) / (length(which(docapt$No.show == 1 & docapt$waitingTime >= 50 & docapt$waitingTime < 100)) + length(which(docapt$No.show == 0 & docapt$waitingTime >= 50 & docapt$waitingTime < 100)))
plot1
prop150 <- length(which(docapt$No.show == 0 & docapt$waitingTime >= 100 & docapt$waitingTime < 150)) / (length(which(docapt$No.show == 1 & docapt$waitingTime >= 100 & docapt$waitingTime < 150)) + length(which(docapt$No.show == 0 & docapt$waitingTime >= 100 & docapt$waitingTime < 150)))
propOver <- length(which(docapt$No.show == 0 & docapt$waitingTime >= 150)) / (length(which(docapt$No.show == 1 & docapt$waitingTime >= 150)) + length(which(docapt$No.show == 0 & docapt$waitingTime >= 150)))
aprProp <- length(which(docapt$appointmentMonth == 4 & docapt$No.show == 0)) / (length(which(docapt$appointmentMonth == 4 & docapt$No.show == 0)) + length(which(docapt$appointmentMonth == 4 & docapt$No.show == 1)))
mayProp <- length(which(docapt$appointmentMonth == 5 & docapt$No.show == 0)) / (length(which(docapt$appointmentMonth == 5 & docapt$No.show == 0)) + length(which(docapt$appointmentMonth == 5 & docapt$No.show == 1)))
juneProp <- length(which(docapt$appointmentMonth == 6 & docapt$No.show == 0)) / (length(which(docapt$appointmentMonth == 6 & docapt$No.show == 0)) + length(which(docapt$appointmentMonth == 6 & docapt$No.show == 1)))
cat("The proportion of no shows per each month where appointments were made are as follows. April:", aprProp, ". May:", mayProp, ". June:", juneProp, ". As we can see, the proportion of no shows were the highest when the appointment were scheduled in March. However, we believe that this may be because the dataset does not show us many appointments made during most months available, so this potentially may be skewed, and would thus not be the best indicator of whether a patient would be a no-show appointment or not.")
barplot(counts3, main="Scheduled Appointment Data by Month", beside=TRUE, legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
rm(aprProp, mayProp, juneProp)
prop50 <- length(which(docapt$No.show == 0 & docapt$waitingTime >= 0 & docapt$waitingTime < 50)) / (length(which(docapt$No.show == 1 & docapt$waitingTime >= 0 & docapt$waitingTime < 50)) + length(which(docapt$No.show == 0 & docapt$waitingTime >= 0 & docapt$waitingTime < 50)))
prop100 <- length(which(docapt$No.show == 0 & docapt$waitingTime >= 50 & docapt$waitingTime < 100)) / (length(which(docapt$No.show == 1 & docapt$waitingTime >= 50 & docapt$waitingTime < 100)) + length(which(docapt$No.show == 0 & docapt$waitingTime >= 50 & docapt$waitingTime < 100)))
prop150 <- length(which(docapt$No.show == 0 & docapt$waitingTime >= 100 & docapt$waitingTime < 150)) / (length(which(docapt$No.show == 1 & docapt$waitingTime >= 100 & docapt$waitingTime < 150)) + length(which(docapt$No.show == 0 & docapt$waitingTime >= 100 & docapt$waitingTime < 150)))
propOver <- length(which(docapt$No.show == 0 & docapt$waitingTime >= 150)) / (length(which(docapt$No.show == 1 & docapt$waitingTime >= 150)) + length(which(docapt$No.show == 0 & docapt$waitingTime >= 150)))
cat("The proportion of patients who waited between 0 and 50 days for their doctor appointment and did not show up is", prop50, ". The proportion of patients who waited between 50 and 100 days for their doctor appointment and did not show up is", prop100, ". The proportion of patients who waited between 100 and 150 days for their doctor appointment and did not show up is", prop150, ". Finally, the proportion of patients who waited over 150 days for their doctor appointment and did not show up is", propOver, ".")
cat("The proportion of patients who waited between 0 and 50 days for their doctor appointment and did not show up is", prop50, ". The proportion of patients who waited between 50 and 100 days for their doctor appointment and did not show up is", prop100, ". The proportion of patients who waited between 100 and 150 days for their doctor appointment and did not show up is", prop150, ". Finally, the proportion of patients who waited over 150 days for their doctor appointment and did not show up is", propOver, ". This information is interesting because it seems like the proportion of no-shows tend to increase as the waiting time between scheduling the doctor appointment, which indicates that people may have forgotten that they had scheduled an appointment and thus did not show up, or there may be another underlying reason why they did not show up. This will be explored in the rest of our code.")
aprProp <- length(which(docapt$appointmentMonth == 4 & docapt$No.show == 0)) / (length(which(docapt$appointmentMonth == 4 & docapt$No.show == 0)) + length(which(docapt$appointmentMonth == 4 & docapt$No.show == 1)))
mayProp <- length(which(docapt$appointmentMonth == 5 & docapt$No.show == 0)) / (length(which(docapt$appointmentMonth == 5 & docapt$No.show == 0)) + length(which(docapt$appointmentMonth == 5 & docapt$No.show == 1)))
juneProp <- length(which(docapt$appointmentMonth == 6 & docapt$No.show == 0)) / (length(which(docapt$appointmentMonth == 6 & docapt$No.show == 0)) + length(which(docapt$appointmentMonth == 6 & docapt$No.show == 1)))
cat("The proportion of no shows per each month where appointments were made are as follows. April:", aprProp, ". May:", mayProp, ". June:", juneProp, ". As we can see, the proportion of no shows were the highest in May. However, like said above, the dataset does not show us many appointments made during other months, so this may potentially be skewed, and would thus not be the best indicator of whether a patient would be a no-show appointment or not.")
barplot(table(docapt$month), ylab = "Number of Scheduled Appointments", xlab ="Day", main="Number of Patients Scheduling Appointments per Month", col = docapt$month)
counts2= table(docapt$No.show, docapt$month)
barplot(counts2, main="Appointment Data by Month", beside=TRUE, legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
janProp <- length(which(docapt$month == 1 & docapt$No.show == 0)) / (length(which(docapt$month == 1 & docapt$No.show == 0)) + length(which(docapt$month == 1 & docapt$No.show == 1)))
febProp <- length(which(docapt$month == 2 & docapt$No.show == 0)) / (length(which(docapt$month == 2 & docapt$No.show == 0)) + length(which(docapt$month == 2 & docapt$No.show == 1)))
marProp <- length(which(docapt$month == 3 & docapt$No.show == 0)) / (length(which(docapt$month == 3 & docapt$No.show == 0)) + length(which(docapt$month == 3 & docapt$No.show == 1)))
aprProp <- length(which(docapt$month == 4 & docapt$No.show == 0)) / (length(which(docapt$month == 4 & docapt$No.show == 0)) + length(which(docapt$month == 4 & docapt$No.show == 1)))
mayProp <- length(which(docapt$month == 5 & docapt$No.show == 0)) / (length(which(docapt$month == 5 & docapt$No.show == 0)) + length(which(docapt$month == 5 & docapt$No.show == 1)))
juneProp <- length(which(docapt$month == 6 & docapt$No.show == 0)) / (length(which(docapt$month == 6 & docapt$No.show == 0)) + length(which(docapt$month == 6 & docapt$No.show == 1)))
novProp <- length(which(docapt$month == 11 & docapt$No.show == 0)) / (length(which(docapt$month == 11 & docapt$No.show == 0)) + length(which(docapt$month == 11 & docapt$No.show == 1)))
decProp <- length(which(docapt$month == 12 & docapt$No.show == 0)) / (length(which(docapt$month == 12 & docapt$No.show == 0)) + length(which(docapt$month == 12 & docapt$No.show == 1)))
cat("The proportion of no shows per each month of scheduling are as follows. January:", janProp, ". February:", febProp, ". March:", marProp, ". April:", aprProp, ". May:", mayProp, ". June:", juneProp, ". November:", novProp, ". December:", decProp, ". As we can see, the proportion of no shows were the highest when the appointment were scheduled in March. However, we believe that this may be because the dataset does not show us many appointments made during most months available, so this potentially may be skewed, and would thus not be the best indicator of whether a patient would be a no-show appointment or not.")
rm(janProp, febProp, aprProp, mayProp, juneProp, novProp, decProp)
docapt <- read.csv("KaggleV2-May-2016.csv")
library(chron)
library(lubridate)
library(ggplot2)
docapt$PatientId <- NULL
docapt$AppointmentID <- NULL
docapt$fullScheduledDate <- as.POSIXct(substr(docapt$ScheduledDay, 1, 10))
docapt$fullScheduledTime <- as.POSIXct(substr(docapt$ScheduledDay, 12, 19), format = "%H:%M:%OS")
docapt$AppointmentDay <- as.POSIXct(substr(docapt$AppointmentDay, 1, 10))
docapt$ScheduledDay <- NULL
docapt$hourOfSchedule <- hour(docapt$fullScheduledTime) #helps with time of day
docapt$hourOfSchedule <- ifelse((minute(docapt$fullScheduledTime) >= 16 & minute(docapt$fullScheduledTime) <= 30), docapt$hourOfSchedule+0.25, docapt$hourOfSchedule)
docapt$hourOfSchedule <- ifelse((minute(docapt$fullScheduledTime) >= 31 & minute(docapt$fullScheduledTime) <= 45), docapt$hourOfSchedule+0.5, docapt$hourOfSchedule)
docapt$hourOfSchedule <- ifelse((minute(docapt$fullScheduledTime) >= 46 & minute(docapt$fullScheduledTime) <= 60), docapt$hourOfSchedule+0.75, docapt$hourOfSchedule)
patientHours <- seq(from = 0, to = 23.75, by = 0.25)
numPatientHoursAt <- numeric(length(patientHours))
for(i in 1:length(patientHours)) {
numPatientHoursAt[i] = length(which(docapt$hourOfSchedule == patientHours[i]))
}
patientHours$numHours <- as.data.frame(patientHours)
numPatientHoursAt <- as.data.frame(numPatientHoursAt)
docapt1 <- cbind(patientHours, numPatientHoursAt)
#this plot shows how many patients are scheduling appointments per each 15 minute interval in the day
scheduledTimePlot <- ggplot(data = docapt1, aes(x=patientHours, y=numPatientHoursAt)) + geom_line() + geom_smooth()
scheduledTimePlot
docapt$weekday <- weekdays(as.Date(docapt$fullScheduledDate))
docapt$month <- format(docapt$fullScheduledDate,"%m")
docapt$month <- as.numeric(as.character(docapt$month))
docapt$weekday <- ordered(docapt$weekday, levels = c("Sunday","Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
barplot(table(docapt$weekday), ylab = "Number of Scheduled Appointments", xlab ="Day", main="Number of Patients Scheduling Appointments per Day of Week", col = docapt$weekday)
counts= table(docapt$No.show, docapt$weekday)
barplot(counts, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"), legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
monProp <- length(which(docapt$weekday == "Monday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Monday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Monday" & docapt$No.show == 1)))
tuesProp <- length(which(docapt$weekday == "Tuesday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Tuesday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Tuesday" & docapt$No.show == 1)))
wedProp <- length(which(docapt$weekday == "Wednesday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Wednesday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Wednesday" & docapt$No.show == 1)))
thursProp <- length(which(docapt$weekday == "Thursday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Thursday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Thursday" & docapt$No.show == 1)))
friProp <- length(which(docapt$weekday == "Friday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Friday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Friday" & docapt$No.show == 1)))
cat("The proportion of no shows per each day of the week are as follows. Monday:", monProp, ". Tuesday:", tuesProp, ". Wednesday:", wedProp, ". Thursday:", thursProp, ". Friday:", friProp, ". As we can see, the proportion of no shows were the highest on Fridays.")
rm(monProp, tuesProp, wedProp, thursProp, friProp)
barplot(table(docapt$month), ylab = "Number of Scheduled Appointments", xlab ="Day", main="Number of Patients Scheduling Appointments per Month", col = docapt$month)
counts2= table(docapt$No.show, docapt$month)
barplot(counts2, main="Appointment Data by Month", beside=TRUE, legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
janProp <- length(which(docapt$month == 1 & docapt$No.show == 0)) / (length(which(docapt$month == 1 & docapt$No.show == 0)) + length(which(docapt$month == 1 & docapt$No.show == 1)))
febProp <- length(which(docapt$month == 2 & docapt$No.show == 0)) / (length(which(docapt$month == 2 & docapt$No.show == 0)) + length(which(docapt$month == 2 & docapt$No.show == 1)))
marProp <- length(which(docapt$month == 3 & docapt$No.show == 0)) / (length(which(docapt$month == 3 & docapt$No.show == 0)) + length(which(docapt$month == 3 & docapt$No.show == 1)))
aprProp <- length(which(docapt$month == 4 & docapt$No.show == 0)) / (length(which(docapt$month == 4 & docapt$No.show == 0)) + length(which(docapt$month == 4 & docapt$No.show == 1)))
mayProp <- length(which(docapt$month == 5 & docapt$No.show == 0)) / (length(which(docapt$month == 5 & docapt$No.show == 0)) + length(which(docapt$month == 5 & docapt$No.show == 1)))
juneProp <- length(which(docapt$month == 6 & docapt$No.show == 0)) / (length(which(docapt$month == 6 & docapt$No.show == 0)) + length(which(docapt$month == 6 & docapt$No.show == 1)))
novProp <- length(which(docapt$month == 11 & docapt$No.show == 0)) / (length(which(docapt$month == 11 & docapt$No.show == 0)) + length(which(docapt$month == 11 & docapt$No.show == 1)))
decProp <- length(which(docapt$month == 12 & docapt$No.show == 0)) / (length(which(docapt$month == 12 & docapt$No.show == 0)) + length(which(docapt$month == 12 & docapt$No.show == 1)))
cat("The proportion of no shows per each month of scheduling are as follows. January:", janProp, ". February:", febProp, ". March:", marProp, ". April:", aprProp, ". May:", mayProp, ". June:", juneProp, ". November:", novProp, ". December:", decProp, ". As we can see, the proportion of no shows were the highest when the appointment were scheduled in March. However, we believe that this may be because the dataset does not show us many appointments made during most months available, so this potentially may be skewed, and would thus not be the best indicator of whether a patient would be a no-show appointment or not.")
rm(janProp, febProp, aprProp, mayProp, juneProp, novProp, decProp)
docapt$appointmentMonth <- format(docapt$AppointmentDay,"%m")
docapt$appointmentMonth <- as.numeric(as.character(docapt$appointmentMonth), na.rm=TRUE)
barplot(table(docapt$appointmentMonth), ylab = "Number of Scheduled Appointments", xlab ="Month", main="Number of Patients Scheduled Appointments per Month", col = docapt$appointmentMonth)
counts3= table(docapt$No.show, month(docapt$appointmentMonth))
barplot(counts3, main="Scheduled Appointment Data by Month", beside=TRUE, legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
aprProp <- length(which(docapt$appointmentMonth == 4 & docapt$No.show == 0)) / (length(which(docapt$appointmentMonth == 4 & docapt$No.show == 0)) + length(which(docapt$appointmentMonth == 4 & docapt$No.show == 1)))
mayProp <- length(which(docapt$appointmentMonth == 5 & docapt$No.show == 0)) / (length(which(docapt$appointmentMonth == 5 & docapt$No.show == 0)) + length(which(docapt$appointmentMonth == 5 & docapt$No.show == 1)))
juneProp <- length(which(docapt$appointmentMonth == 6 & docapt$No.show == 0)) / (length(which(docapt$appointmentMonth == 6 & docapt$No.show == 0)) + length(which(docapt$appointmentMonth == 6 & docapt$No.show == 1)))
cat("The proportion of no shows per each month where appointments were made are as follows. April:", aprProp, ". May:", mayProp, ". June:", juneProp, ". As we can see, the proportion of no shows were the highest in May. However, like said above, the dataset does not show us many appointments made during other months, so this may potentially be skewed, and would thus not be the best indicator of whether a patient would be a no-show appointment or not.")
rm(aprProp, mayProp, juneProp)
docapt$waitingTime <- docapt$AppointmentDay - docapt$fullScheduledDate
#gets the number of days instead of seconds
docapt$waitingTime <- (docapt$waitingTime / 86400)
ggplot(data = docapt, y = docapt$waitingTime, jitter = True)
docapt$No.show <- ifelse(docapt$No.show == "No", 1, 0)
#1 = showed up, 0 = no show
plot1 <- ggplot() + geom_jitter(aes(y = docapt$waitingTime, x = docapt$No.show), data = docapt, stat="identity")
plot1
proportionNoShows = length(which(docapt$No.show == 0)) / (length(which(docapt$No.show == 1)) + length(which(docapt$No.show == 0)))
cat("The number of patients showing up to the appointment is", length(which(docapt$No.show == 1)), "and the number of docapt not showing up to the appointment is", length(which(docapt$No.show == 0)), ". The proportion of people not showing up is", proportionNoShows, ".")
prop50 <- length(which(docapt$No.show == 0 & docapt$waitingTime >= 0 & docapt$waitingTime < 50)) / (length(which(docapt$No.show == 1 & docapt$waitingTime >= 0 & docapt$waitingTime < 50)) + length(which(docapt$No.show == 0 & docapt$waitingTime >= 0 & docapt$waitingTime < 50)))
prop100 <- length(which(docapt$No.show == 0 & docapt$waitingTime >= 50 & docapt$waitingTime < 100)) / (length(which(docapt$No.show == 1 & docapt$waitingTime >= 50 & docapt$waitingTime < 100)) + length(which(docapt$No.show == 0 & docapt$waitingTime >= 50 & docapt$waitingTime < 100)))
prop150 <- length(which(docapt$No.show == 0 & docapt$waitingTime >= 100 & docapt$waitingTime < 150)) / (length(which(docapt$No.show == 1 & docapt$waitingTime >= 100 & docapt$waitingTime < 150)) + length(which(docapt$No.show == 0 & docapt$waitingTime >= 100 & docapt$waitingTime < 150)))
propOver <- length(which(docapt$No.show == 0 & docapt$waitingTime >= 150)) / (length(which(docapt$No.show == 1 & docapt$waitingTime >= 150)) + length(which(docapt$No.show == 0 & docapt$waitingTime >= 150)))
cat("The proportion of patients who waited between 0 and 50 days for their doctor appointment and did not show up is", prop50, ". The proportion of patients who waited between 50 and 100 days for their doctor appointment and did not show up is", prop100, ". The proportion of patients who waited between 100 and 150 days for their doctor appointment and did not show up is", prop150, ". Finally, the proportion of patients who waited over 150 days for their doctor appointment and did not show up is", propOver, ". This information is interesting because it seems like the proportion of no-shows tend to increase as the waiting time between scheduling the doctor appointment, which indicates that people may have forgotten that they had scheduled an appointment and thus did not show up, or there may be another underlying reason why they did not show up. This will be explored in the rest of our code.")
barplot(table(docapt$month), ylab = "Number of Scheduled Appointments", xlab ="Day", main="Number of Patients Scheduling Appointments per Month", col = docapt$month)
counts2= table(docapt$No.show, docapt$month)
barplot(counts2, main="Appointment Data by Month", beside=TRUE, legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
janProp <- length(which(docapt$month == 1 & docapt$No.show == 0)) / (length(which(docapt$month == 1 & docapt$No.show == 0)) + length(which(docapt$month == 1 & docapt$No.show == 1)))
febProp <- length(which(docapt$month == 2 & docapt$No.show == 0)) / (length(which(docapt$month == 2 & docapt$No.show == 0)) + length(which(docapt$month == 2 & docapt$No.show == 1)))
marProp <- length(which(docapt$month == 3 & docapt$No.show == 0)) / (length(which(docapt$month == 3 & docapt$No.show == 0)) + length(which(docapt$month == 3 & docapt$No.show == 1)))
aprProp <- length(which(docapt$month == 4 & docapt$No.show == 0)) / (length(which(docapt$month == 4 & docapt$No.show == 0)) + length(which(docapt$month == 4 & docapt$No.show == 1)))
mayProp <- length(which(docapt$month == 5 & docapt$No.show == 0)) / (length(which(docapt$month == 5 & docapt$No.show == 0)) + length(which(docapt$month == 5 & docapt$No.show == 1)))
juneProp <- length(which(docapt$month == 6 & docapt$No.show == 0)) / (length(which(docapt$month == 6 & docapt$No.show == 0)) + length(which(docapt$month == 6 & docapt$No.show == 1)))
novProp <- length(which(docapt$month == 11 & docapt$No.show == 0)) / (length(which(docapt$month == 11 & docapt$No.show == 0)) + length(which(docapt$month == 11 & docapt$No.show == 1)))
decProp <- length(which(docapt$month == 12 & docapt$No.show == 0)) / (length(which(docapt$month == 12 & docapt$No.show == 0)) + length(which(docapt$month == 12 & docapt$No.show == 1)))
cat("The proportion of no shows per each month of scheduling are as follows. January:", janProp, ". February:", febProp, ". March:", marProp, ". April:", aprProp, ". May:", mayProp, ". June:", juneProp, ". November:", novProp, ". December:", decProp, ". As we can see, the proportion of no shows were the highest when the appointment were scheduled in March. However, we believe that this may be because the dataset does not show us many appointments made during most months available, so this potentially may be skewed, and would thus not be the best indicator of whether a patient would be a no-show appointment or not.")
rm(janProp, febProp, aprProp, mayProp, juneProp, novProp, decProp)
barplot(table(docapt$month), ylab = "Number of Scheduled Appointments", xlab ="Day", main="Number of Patients Scheduling Appointments per Month", col = docapt$month)
counts2= table(docapt$No.show, docapt$month)
barplot(counts2, main="Appointment Data by Month", beside=TRUE, legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
janProp <- length(which(docapt$month == 1 & docapt$No.show == 0)) / (length(which(docapt$month == 1 & docapt$No.show == 0)) + length(which(docapt$month == 1 & docapt$No.show == 1)))
febProp <- length(which(docapt$month == 2 & docapt$No.show == 0)) / (length(which(docapt$month == 2 & docapt$No.show == 0)) + length(which(docapt$month == 2 & docapt$No.show == 1)))
marProp <- length(which(docapt$month == 3 & docapt$No.show == 0)) / (length(which(docapt$month == 3 & docapt$No.show == 0)) + length(which(docapt$month == 3 & docapt$No.show == 1)))
aprProp <- length(which(docapt$month == 4 & docapt$No.show == 0)) / (length(which(docapt$month == 4 & docapt$No.show == 0)) + length(which(docapt$month == 4 & docapt$No.show == 1)))
mayProp <- length(which(docapt$month == 5 & docapt$No.show == 0)) / (length(which(docapt$month == 5 & docapt$No.show == 0)) + length(which(docapt$month == 5 & docapt$No.show == 1)))
juneProp <- length(which(docapt$month == 6 & docapt$No.show == 0)) / (length(which(docapt$month == 6 & docapt$No.show == 0)) + length(which(docapt$month == 6 & docapt$No.show == 1)))
novProp <- length(which(docapt$month == 11 & docapt$No.show == 0)) / (length(which(docapt$month == 11 & docapt$No.show == 0)) + length(which(docapt$month == 11 & docapt$No.show == 1)))
decProp <- length(which(docapt$month == 12 & docapt$No.show == 0)) / (length(which(docapt$month == 12 & docapt$No.show == 0)) + length(which(docapt$month == 12 & docapt$No.show == 1)))
cat("The proportion of no shows per each month of scheduling are as follows. January:", janProp, ". February:", febProp, ". March:", marProp, ". April:", aprProp, ". May:", mayProp, ". June:", juneProp, ". November:", novProp, ". December:", decProp, ". As we can see, the proportion of no shows were the highest when the appointment were scheduled in March. However, we believe that this may be because the dataset does not show us many appointments made during most months available, so this potentially may be skewed, and would thus not be the best indicator of whether a patient would be a no-show appointment or not.")
docapt$weekday <- weekdays(as.Date(docapt$fullScheduledDate))
docapt$month <- format(docapt$fullScheduledDate,"%m")
docapt$month <- as.numeric(as.character(docapt$month))
docapt$weekday <- ordered(docapt$weekday, levels = c("Sunday","Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
barplot(table(docapt$weekday), ylab = "Number of Scheduled Appointments", xlab ="Day", main="Number of Patients Scheduling Appointments per Day of Week", col = docapt$weekday)
counts= table(docapt$No.show, docapt$weekday)
barplot(counts, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"), legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
monProp <- length(which(docapt$weekday == "Monday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Monday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Monday" & docapt$No.show == 1)))
tuesProp <- length(which(docapt$weekday == "Tuesday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Tuesday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Tuesday" & docapt$No.show == 1)))
wedProp <- length(which(docapt$weekday == "Wednesday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Wednesday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Wednesday" & docapt$No.show == 1)))
thursProp <- length(which(docapt$weekday == "Thursday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Thursday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Thursday" & docapt$No.show == 1)))
friProp <- length(which(docapt$weekday == "Friday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Friday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Friday" & docapt$No.show == 1)))
cat("The proportion of no shows per each day of the week are as follows. Monday:", monProp, ". Tuesday:", tuesProp, ". Wednesday:", wedProp, ". Thursday:", thursProp, ". Friday:", friProp, ". As we can see, the proportion of no shows were the highest on Fridays.")
docapt$appointmentMonth <- format(docapt$AppointmentDay,"%m")
docapt$appointmentMonth <- as.numeric(as.character(docapt$appointmentMonth), na.rm=TRUE)
barplot(table(docapt$appointmentMonth), ylab = "Number of Scheduled Appointments", xlab ="Month", main="Number of Patients Scheduled Appointments per Month", col = docapt$appointmentMonth)
counts3= table(docapt$No.show, month(docapt$appointmentMonth))
barplot(counts3, main="Scheduled Appointment Data by Month", beside=TRUE, legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
aprProp <- length(which(docapt$appointmentMonth == 4 & docapt$No.show == 0)) / (length(which(docapt$appointmentMonth == 4 & docapt$No.show == 0)) + length(which(docapt$appointmentMonth == 4 & docapt$No.show == 1)))
mayProp <- length(which(docapt$appointmentMonth == 5 & docapt$No.show == 0)) / (length(which(docapt$appointmentMonth == 5 & docapt$No.show == 0)) + length(which(docapt$appointmentMonth == 5 & docapt$No.show == 1)))
juneProp <- length(which(docapt$appointmentMonth == 6 & docapt$No.show == 0)) / (length(which(docapt$appointmentMonth == 6 & docapt$No.show == 0)) + length(which(docapt$appointmentMonth == 6 & docapt$No.show == 1)))
cat("The proportion of no shows per each month where appointments were made are as follows. April:", aprProp, ". May:", mayProp, ". June:", juneProp, ". As we can see, the proportion of no shows were the highest in May. However, like said above, the dataset does not show us many appointments made during other months, so this may potentially be skewed, and would thus not be the best indicator of whether a patient would be a no-show appointment or not.")
docapt$waitingTime <- docapt$AppointmentDay - docapt$fullScheduledDate
#gets the number of days instead of seconds
docapt$waitingTime <- (docapt$waitingTime / 86400)
ggplot(data = docapt, y = docapt$waitingTime, jitter = True)
docapt$No.show <- ifelse(docapt$No.show == "No", 1, 0)
#1 = showed up, 0 = no show
plot1 <- ggplot() + geom_jitter(aes(y = docapt$waitingTime, x = docapt$No.show), data = docapt, stat="identity")
plot1
proportionNoShows = length(which(docapt$No.show == 0)) / (length(which(docapt$No.show == 1)) + length(which(docapt$No.show == 0)))
cat("The number of patients showing up to the appointment is", length(which(docapt$No.show == 1)), "and the number of docapt not showing up to the appointment is", length(which(docapt$No.show == 0)), ". The proportion of people not showing up is", proportionNoShows, ".")
prop50 <- length(which(docapt$No.show == 0 & docapt$waitingTime >= 0 & docapt$waitingTime < 50)) / (length(which(docapt$No.show == 1 & docapt$waitingTime >= 0 & docapt$waitingTime < 50)) + length(which(docapt$No.show == 0 & docapt$waitingTime >= 0 & docapt$waitingTime < 50)))
prop100 <- length(which(docapt$No.show == 0 & docapt$waitingTime >= 50 & docapt$waitingTime < 100)) / (length(which(docapt$No.show == 1 & docapt$waitingTime >= 50 & docapt$waitingTime < 100)) + length(which(docapt$No.show == 0 & docapt$waitingTime >= 50 & docapt$waitingTime < 100)))
prop150 <- length(which(docapt$No.show == 0 & docapt$waitingTime >= 100 & docapt$waitingTime < 150)) / (length(which(docapt$No.show == 1 & docapt$waitingTime >= 100 & docapt$waitingTime < 150)) + length(which(docapt$No.show == 0 & docapt$waitingTime >= 100 & docapt$waitingTime < 150)))
propOver <- length(which(docapt$No.show == 0 & docapt$waitingTime >= 150)) / (length(which(docapt$No.show == 1 & docapt$waitingTime >= 150)) + length(which(docapt$No.show == 0 & docapt$waitingTime >= 150)))
cat("The proportion of patients who waited between 0 and 50 days for their doctor appointment and did not show up is", prop50, ". The proportion of patients who waited between 50 and 100 days for their doctor appointment and did not show up is", prop100, ". The proportion of patients who waited between 100 and 150 days for their doctor appointment and did not show up is", prop150, ". Finally, the proportion of patients who waited over 150 days for their doctor appointment and did not show up is", propOver, ". This information is interesting because it seems like the proportion of no-shows tend to increase as the waiting time between scheduling the doctor appointment, which indicates that people may have forgotten that they had scheduled an appointment and thus did not show up, or there may be another underlying reason why they did not show up. This will be explored in the rest of our code.")
ggplot(data = docapt, y = docapt$waitingTime, jitter = True)
rm(ls)
rm(list=l)
rm(list=ls)
rm(list = ls())
docapt <- read.csv("KaggleV2-May-2016.csv")
library(chron)
library(lubridate)
library(ggplot2)
docapt$PatientId <- NULL
docapt$AppointmentID <- NULL
docapt$fullScheduledDate <- as.POSIXct(substr(docapt$ScheduledDay, 1, 10))
docapt$fullScheduledTime <- as.POSIXct(substr(docapt$ScheduledDay, 12, 19), format = "%H:%M:%OS")
docapt$AppointmentDay <- as.POSIXct(substr(docapt$AppointmentDay, 1, 10))
docapt$ScheduledDay <- NULL
docapt$hourOfSchedule <- hour(docapt$fullScheduledTime) #helps with time of day
docapt$hourOfSchedule <- ifelse((minute(docapt$fullScheduledTime) >= 16 & minute(docapt$fullScheduledTime) <= 30), docapt$hourOfSchedule+0.25, docapt$hourOfSchedule)
docapt$hourOfSchedule <- ifelse((minute(docapt$fullScheduledTime) >= 31 & minute(docapt$fullScheduledTime) <= 45), docapt$hourOfSchedule+0.5, docapt$hourOfSchedule)
docapt$hourOfSchedule <- ifelse((minute(docapt$fullScheduledTime) >= 46 & minute(docapt$fullScheduledTime) <= 60), docapt$hourOfSchedule+0.75, docapt$hourOfSchedule)
patientHours <- seq(from = 0, to = 23.75, by = 0.25)
numPatientHoursAt <- numeric(length(patientHours))
for(i in 1:length(patientHours)) {
numPatientHoursAt[i] = length(which(docapt$hourOfSchedule == patientHours[i]))
}
patientHours$numHours <- as.data.frame(patientHours)
numPatientHoursAt <- as.data.frame(numPatientHoursAt)
docapt1 <- cbind(patientHours, numPatientHoursAt)
#this plot shows how many patients are scheduling appointments per each 15 minute interval in the day
scheduledTimePlot <- ggplot(data = docapt1, aes(x=patientHours, y=numPatientHoursAt)) + geom_line() + geom_smooth()
scheduledTimePlot
docapt$weekday <- weekdays(as.Date(docapt$fullScheduledDate))
docapt$month <- format(docapt$fullScheduledDate,"%m")
docapt$month <- as.numeric(as.character(docapt$month))
docapt$weekday <- ordered(docapt$weekday, levels = c("Sunday","Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
barplot(table(docapt$weekday), ylab = "Number of Scheduled Appointments", xlab ="Day", main="Number of Patients Scheduling Appointments per Day of Week", col = docapt$weekday)
counts= table(docapt$No.show, docapt$weekday)
barplot(counts, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"), legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
monProp <- length(which(docapt$weekday == "Monday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Monday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Monday" & docapt$No.show == 1)))
tuesProp <- length(which(docapt$weekday == "Tuesday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Tuesday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Tuesday" & docapt$No.show == 1)))
wedProp <- length(which(docapt$weekday == "Wednesday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Wednesday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Wednesday" & docapt$No.show == 1)))
thursProp <- length(which(docapt$weekday == "Thursday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Thursday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Thursday" & docapt$No.show == 1)))
friProp <- length(which(docapt$weekday == "Friday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Friday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Friday" & docapt$No.show == 1)))
cat("The proportion of no shows per each day of the week are as follows. Monday:", monProp, ". Tuesday:", tuesProp, ". Wednesday:", wedProp, ". Thursday:", thursProp, ". Friday:", friProp, ". As we can see, the proportion of no shows were the highest on Fridays.")
docapt$PatientId <- NULL
docapt$AppointmentID <- NULL
docapt$fullScheduledDate <- as.POSIXct(substr(docapt$ScheduledDay, 1, 10))
docapt <- read.csv("KaggleV2-May-2016.csv")
library(chron)
library(lubridate)
library(ggplot2)
docapt$PatientId <- NULL
docapt$AppointmentID <- NULL
docapt$fullScheduledDate <- as.POSIXct(substr(docapt$ScheduledDay, 1, 10))
docapt$fullScheduledTime <- as.POSIXct(substr(docapt$ScheduledDay, 12, 19), format = "%H:%M:%OS")
docapt$AppointmentDay <- as.POSIXct(substr(docapt$AppointmentDay, 1, 10))
docapt$ScheduledDay <- NULL
docapt$No.show <- ifelse(docapt$No.show == "No", 1, 0)
#1 = showed up, 0 = no show
docapt$hourOfSchedule <- hour(docapt$fullScheduledTime) #helps with time of day
docapt$hourOfSchedule <- ifelse((minute(docapt$fullScheduledTime) >= 16 & minute(docapt$fullScheduledTime) <= 30), docapt$hourOfSchedule+0.25, docapt$hourOfSchedule)
docapt$hourOfSchedule <- ifelse((minute(docapt$fullScheduledTime) >= 31 & minute(docapt$fullScheduledTime) <= 45), docapt$hourOfSchedule+0.5, docapt$hourOfSchedule)
docapt$hourOfSchedule <- ifelse((minute(docapt$fullScheduledTime) >= 46 & minute(docapt$fullScheduledTime) <= 60), docapt$hourOfSchedule+0.75, docapt$hourOfSchedule)
patientHours <- seq(from = 0, to = 23.75, by = 0.25)
numPatientHoursAt <- numeric(length(patientHours))
for(i in 1:length(patientHours)) {
numPatientHoursAt[i] = length(which(docapt$hourOfSchedule == patientHours[i]))
}
patientHours$numHours <- as.data.frame(patientHours)
numPatientHoursAt <- as.data.frame(numPatientHoursAt)
docapt1 <- cbind(patientHours, numPatientHoursAt)
#this plot shows how many patients are scheduling appointments per each 15 minute interval in the day
scheduledTimePlot <- ggplot(data = docapt1, aes(x=patientHours, y=numPatientHoursAt)) + geom_line() + geom_smooth()
scheduledTimePlot
docapt$weekday <- weekdays(as.Date(docapt$fullScheduledDate))
docapt$month <- format(docapt$fullScheduledDate,"%m")
docapt$month <- as.numeric(as.character(docapt$month))
docapt$weekday <- ordered(docapt$weekday, levels = c("Sunday","Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
barplot(table(docapt$weekday), ylab = "Number of Scheduled Appointments", xlab ="Day", main="Number of Patients Scheduling Appointments per Day of Week", col = docapt$weekday)
counts= table(docapt$No.show, docapt$weekday)
barplot(counts, main="Appointment Data by Day of Week", beside=TRUE, names.arg = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"), legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
monProp <- length(which(docapt$weekday == "Monday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Monday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Monday" & docapt$No.show == 1)))
tuesProp <- length(which(docapt$weekday == "Tuesday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Tuesday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Tuesday" & docapt$No.show == 1)))
wedProp <- length(which(docapt$weekday == "Wednesday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Wednesday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Wednesday" & docapt$No.show == 1)))
thursProp <- length(which(docapt$weekday == "Thursday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Thursday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Thursday" & docapt$No.show == 1)))
friProp <- length(which(docapt$weekday == "Friday" & docapt$No.show == 0)) / (length(which(docapt$weekday == "Friday" & docapt$No.show == 0)) + length(which(docapt$weekday == "Friday" & docapt$No.show == 1)))
cat("The proportion of no shows per each day of the week are as follows. Monday:", monProp, ". Tuesday:", tuesProp, ". Wednesday:", wedProp, ". Thursday:", thursProp, ". Friday:", friProp, ". As we can see, the proportion of no shows were the highest on Fridays.")
barplot(table(docapt$month), ylab = "Number of Scheduled Appointments", xlab ="Day", main="Number of Patients Scheduling Appointments per Month", col = docapt$month)
counts2= table(docapt$No.show, docapt$month)
barplot(counts2, main="Appointment Data by Month", beside=TRUE, legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
janProp <- length(which(docapt$month == 1 & docapt$No.show == 0)) / (length(which(docapt$month == 1 & docapt$No.show == 0)) + length(which(docapt$month == 1 & docapt$No.show == 1)))
febProp <- length(which(docapt$month == 2 & docapt$No.show == 0)) / (length(which(docapt$month == 2 & docapt$No.show == 0)) + length(which(docapt$month == 2 & docapt$No.show == 1)))
marProp <- length(which(docapt$month == 3 & docapt$No.show == 0)) / (length(which(docapt$month == 3 & docapt$No.show == 0)) + length(which(docapt$month == 3 & docapt$No.show == 1)))
aprProp <- length(which(docapt$month == 4 & docapt$No.show == 0)) / (length(which(docapt$month == 4 & docapt$No.show == 0)) + length(which(docapt$month == 4 & docapt$No.show == 1)))
mayProp <- length(which(docapt$month == 5 & docapt$No.show == 0)) / (length(which(docapt$month == 5 & docapt$No.show == 0)) + length(which(docapt$month == 5 & docapt$No.show == 1)))
juneProp <- length(which(docapt$month == 6 & docapt$No.show == 0)) / (length(which(docapt$month == 6 & docapt$No.show == 0)) + length(which(docapt$month == 6 & docapt$No.show == 1)))
novProp <- length(which(docapt$month == 11 & docapt$No.show == 0)) / (length(which(docapt$month == 11 & docapt$No.show == 0)) + length(which(docapt$month == 11 & docapt$No.show == 1)))
decProp <- length(which(docapt$month == 12 & docapt$No.show == 0)) / (length(which(docapt$month == 12 & docapt$No.show == 0)) + length(which(docapt$month == 12 & docapt$No.show == 1)))
cat("The proportion of no shows per each month of scheduling are as follows. January:", janProp, ". February:", febProp, ". March:", marProp, ". April:", aprProp, ". May:", mayProp, ". June:", juneProp, ". November:", novProp, ". December:", decProp, ". As we can see, the proportion of no shows were the highest when the appointment were scheduled in March. However, we believe that this may be because the dataset does not show us many appointments made during most months available, so this potentially may be skewed, and would thus not be the best indicator of whether a patient would be a no-show appointment or not.")
docapt$appointmentMonth <- format(docapt$AppointmentDay,"%m")
docapt$appointmentMonth <- as.numeric(as.character(docapt$appointmentMonth), na.rm=TRUE)
barplot(table(docapt$appointmentMonth), ylab = "Number of Scheduled Appointments", xlab ="Month", main="Number of Patients Scheduled Appointments per Month", col = docapt$appointmentMonth)
counts3= table(docapt$No.show, month(docapt$appointmentMonth))
barplot(counts3, main="Scheduled Appointment Data by Month", beside=TRUE, legend = c("No Show", "Show"), xlab = "Number of Appointments", ylab= "Number of People")
aprProp <- length(which(docapt$appointmentMonth == 4 & docapt$No.show == 0)) / (length(which(docapt$appointmentMonth == 4 & docapt$No.show == 0)) + length(which(docapt$appointmentMonth == 4 & docapt$No.show == 1)))
mayProp <- length(which(docapt$appointmentMonth == 5 & docapt$No.show == 0)) / (length(which(docapt$appointmentMonth == 5 & docapt$No.show == 0)) + length(which(docapt$appointmentMonth == 5 & docapt$No.show == 1)))
juneProp <- length(which(docapt$appointmentMonth == 6 & docapt$No.show == 0)) / (length(which(docapt$appointmentMonth == 6 & docapt$No.show == 0)) + length(which(docapt$appointmentMonth == 6 & docapt$No.show == 1)))
cat("The proportion of no shows per each month where appointments were made are as follows. April:", aprProp, ". May:", mayProp, ". June:", juneProp, ". As we can see, the proportion of no shows were the highest in May. However, like said above, the dataset does not show us many appointments made during other months, so this may potentially be skewed, and would thus not be the best indicator of whether a patient would be a no-show appointment or not.")
docapt$waitingTime <- docapt$AppointmentDay - docapt$fullScheduledDate
#gets the number of days instead of seconds
docapt$waitingTime <- (docapt$waitingTime / 86400)
ggplot(data = docapt, y = docapt$waitingTime, jitter = True)
docapt$waitingTime <- docapt$AppointmentDay - docapt$fullScheduledDate
#gets the number of days instead of seconds
docapt$waitingTime <- (docapt$waitingTime / 86400)
#lm, glm, probit
lmModel <- lm(No.show ~ Scholarship + Hipertension, data = docapt)
summary(lmModel)
#lm, glm, probit
lmModel <- lm(No.show ~ Scholarship + Hipertension + Diabetes + Alcoholism + Handcap + SMS_Received, data = docapt)
summary(lmModel)
#lm, glm, probit
lmModel <- lm(No.show ~ Scholarship + Hipertension + Diabetes + Alcoholism + Handcap + SMS_Received, data = docapt)
#lm, glm, probit
lmModel <- lm(No.show ~ Scholarship + Hipertension + Diabetes + Alcoholism + Handcap + SMS_received, data = docapt)
summary(lmModel)
#lm, glm, probit
lmModel <- lm(No.show ~ Scholarship + Hipertension + SMS_received, data = docapt)
summary(lmModel)
#lm, glm, probit
lmModel <- lm(No.show ~ Scholarship + Hipertension + SMS_received + hourOfSchedule, data = docapt)
summary(lmModel)
#lm, glm, probit
lmModel <- lm(No.show ~ Scholarship + Hipertension + SMS_received + hourOfSchedule + waitingTime, data = docapt)
summary(lmModel)
#lm, glm, probit
lmModel <- lm(No.show ~ Scholarship SMS_received + hourOfSchedule + waitingTime + , data = docapt)
#lm, glm, probit
lmModel <- lm(No.show ~ Scholarship + SMS_received + hourOfSchedule + waitingTime + , data = docapt)
summary(lmModel)
#lm, glm, probit
lmModel <- lm(No.show ~ SMS_received + hourOfSchedule + waitingTime + , data = docapt)
summary(lmModel)
#lm, glm, probit
lmModel <- lm(No.show ~ SMS_received + hourOfSchedule + waitingTime + , data = docapt)
#lm, glm, probit
lmModel <- lm(No.show ~ SMS_received + hourOfSchedule + waitingTime, data = docapt)
summary(lmModel)
#lm, glm, probit
lmModel <- lm(No.show ~ month + SMS_received + hourOfSchedule + waitingTime, data = docapt)
summary(lmModel)
#lm, glm, probit
lmModel <- lm(No.show ~ Age + month + SMS_received + hourOfSchedule + waitingTime, data = docapt)
summary(lmModel)
#lm, glm, probit
lmModel <- lm(No.show ~ Age + month + hourOfSchedule + waitingTime, data = docapt)
summary(lmModel)
#lm, glm, probit
lmModel <- lm(No.show ~ Age + month + hourOfSchedule + waitingTime + Gender, data = docapt)
summary(lmModel)
#lm, glm, probit
lmModel <- lm(No.show ~ Age + month + hourOfSchedule + waitingTime, data = docapt)
summary(lmModel)
#lm, glm, probit
lmModelSicknesses <- lm(No.show ~ Hipertension + Diabetes + Alcoholism + Handcap, data = docapt)
#lm, glm, probit
lmModelSicknesses <- lm(No.show ~ Hipertension + Diabetes + Alcoholism + Handcap, data = docapt)
summary(lmModel)
#lm, glm, probit
lmModelSicknesses <- lm(No.show ~ Hipertension + Diabetes + Alcoholism + Handcap, data = docapt)
summary(lmModelSickness)
summary(lmModelSicknesses)
#lm, glm, probit
lmModelCharacteristics <- lm(No.show ~ Gender + Age + Scholarship, data = docapt)
summary(lmModelCharacteristics)
View(docapt)
#lm, glm, probit
lmModelTime <- lm(No.show ~ AppointmentDay, data = docapt)
summary(lmModelTime)
#lm, glm, probit
lmModelTime <- lm(No.show ~ AppointmentDay + fullScheduledDate + fullScheduledTime + hourOfSchedule + weekday + month + appointmentMonth + waitingTime, data = docapt)
cat("This linear regression model shows that Age and Scholarship are more significant in determining the probability of a patient no show, although the R-squared is still very low like before.")
summary(lmModelTime)
lmModelTime <- lm(No.show ~ AppointmentDay + fullScheduledDate + fullScheduledTime + hourOfSchedule + weekday + month + appointmentMonth + waitingTime, data = docapt)
docapt$waitingTime <- docapt$waitingTime * 86400
lmModelTime <- lm(No.show ~ AppointmentDay + fullScheduledDate + fullScheduledTime + hourOfSchedule + weekday + month + appointmentMonth + waitingTime, data = docapt)
summary(lmModelTime)
docapt$waitingTime <- docapt$waitingTime / 86400
lmModelTime <- lm(No.show ~ AppointmentDay + fullScheduledDate + fullScheduledTime + hourOfSchedule + weekday + month + waitingTime, data = docapt)
summary(lmModelTime)
str(docapt)
#lm, glm, probit
docapt$waitingTime <- as.numeric(docapt$waitingTime)
lmModelTime <- lm(No.show ~ AppointmentDay + fullScheduledDate + fullScheduledTime + hourOfSchedule + weekday + month + appointmentMonth + waitingTime, data = docapt)
summary(lmModelTime)
#lm, glm, probit
docapt$waitingTime <- as.numeric(docapt$waitingTime)
str(docapt)
lmModelTime <- lm(No.show ~ AppointmentDay + fullScheduledDate + fullScheduledTime + hourOfSchedule + weekday + month + appointmentMonth + waitingTime, data = docapt)
summary(lmModelTime)
#lm, glm, probit
docapt$waitingTime <- as.int(docapt$waitingTime)
#lm, glm, probit
docapt$waitingTime <- as.integer(docapt$waitingTime)
lmModelTime <- lm(No.show ~ AppointmentDay + fullScheduledDate + fullScheduledTime + hourOfSchedule + weekday + month + appointmentMonth + waitingTime, data = docapt)
summary(lmModelTime)
